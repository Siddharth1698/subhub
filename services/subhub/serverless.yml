---
service:
  name: subhub

plugins:
  - serverless-python-requirements
  - serverless-plugin-tracing
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: python3.7
  region: us-west-2
  stage: ${opt:stage, self:custom.defaultStage}
  tableName: ${self:custom.tableName}
  memorySize: 256
  timeout: 10
  tracing: true
  stackTags:
    service: ${self:service}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource:
        - { "Fn::GetAtt": ["SubhubDynamoDBTable", "Arn" ] }
    - Effect: Allow
      Action:
        - "secretsmanager:GetSecretValue"
      Resource:
        - "arn:aws:secretsmanager:us-west-2:903937621340:secret:${self:provider.stage}/*"
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource:
        - 'Fn::Join': [':', ['arn:aws:logs', Ref: 'AWS::Region', Ref: AWS::AccountId, 'log-group:/aws/lambda/*:*:*']]
    - Effect: Allow
      Action:
        - kms:Decrypt
      Resource:
        - "arn:aws:kms:us-west-2:${self:custom.awsAccountId}:alias/*"
        - "arn:aws:kms:us-west-2:${self:custom.awsAccountId}:key/*"
    - Effect: Allow
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"
  environment:
    SUBHUB_ACCT: ${self:custom.tableName}

package:
  exclude:
    - '**/*'
  include:
    - 'handler.py'
    - 'subhub/**'

custom:
  awsAccountId: 177680776199
  defaultStage: dev
  pythonRequirements:
    dockerizePip: 'non-linux'
    fileName: subhub/requirements.txt
  git-repo: https://github.com/mozilla/subhub
  tableName: 'subhub-acct-table-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true

functions:
  subhub:
    name: ${self:service.name}-${self:provider.stage}-function
    description: >
      subhub service for handling subscription services interactions
    handler: handler.handle
    timeout: 30
    events:
      - http:
          method: ANY
          path: /
          cors: true
      - http:
          method: ANY
          path: '{proxy+}'
          cors: true
    environment:
      STAGE: ${self:provider.stage}
      SUBHUB_TABLE: ${self:provider.tableName}

resources:
  Resources:
    SubhubDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
